//
//  main.swift
//  hardBanking
//
//  Created by apple on 30.09.2023.
//

import Foundation



//1. –ö–∞–ª–µ–Ω–¥–∞—Ä—å. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª :
//   –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã, —Å–æ–±—ã—Ç–∏—è –∏ —Ç–¥. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π

var dates = [String:[String]]() // –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å(dictionary), –≥–¥–µ –∫–ª—é—á —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
func searchFromDate(date string: String) -> [String]? { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–∞—Ä—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É
    return dates[string]
}

func calendare() -> Bool? {
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ü´∂üèΩ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å üóìÔ∏è")
    var exit : Bool = true
    print("–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ \"Exit\" –≤–º–µ—Å—Ç–æ –¥–∞—Ç—ã")

    while exit {
        print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ : ")
        let userMainInputOptinal = readLine()
        guard let userMainInput = userMainInputOptinal else { return nil }
        if userMainInput == "Exit" { break }
        if let haveOrNot = searchFromDate(date:userMainInput) { // –ï—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
            print("–í –¥–∞—Ç—É 15.04, –ø—Ä–æ–∏–∑–æ—à–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è : \(haveOrNot)")
        } else { // –ï—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            print("–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –¥–∞–Ω–Ω—É—é –¥–∞—Ç—É")
            print("–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ ?")
            let userChoice = readLine()
            if let userChoice = userChoice { // –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if userChoice == "–î–∞" || userChoice == "–¥–∞" || userChoice == "Yes" { // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
                    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É (–ú–µ—Å—è—Ü.–î–µ–Ω—å) —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º")
                    let newDateOptinal = readLine() // –í–≤–æ–¥ –¥–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                    if let newDate = newDateOptinal { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω—É–ª–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                        print("–í–≤–µ–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ : ")
                        let newEventOptinal = readLine() // –í–≤–æ–¥ —Å–æ–±—ã—Ç–∏—è –≤ —ç—Ç—É –¥–∞—Ç—É
                        if let newEvent = newEventOptinal {
                            var newEmptyElements = [String]()
                            let separatedEvent = newEvent.split(separator: " ")
                            for element in separatedEvent{
                                newEmptyElements.append(String(element))
                            }
                            dates[newDate] = newEmptyElements // –î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä—å –∫–ª—é—á–∞(–¥–∞—Ç—ã) –∏ –∑–Ω–∞—á–µ–Ω–∏–µ(–º–∞—Å—Å–∏–≤ —Å–æ–±—ã—Ç–∏–π)

                        } else { print("Error Event")}
                    } else { print("Error Date") }
                } else if userChoice == "–ù–µ—Ç" || userChoice == "–Ω–µ—Ç" || userChoice == "Not"{ // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
                    print("–°–æ–±—ã—Ç–∏–µ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                }
            }
        }
    }
    return nil
}

// –ü–æ—á–µ–º—É –≤–æ–∑–≤—Ä–∞—à–µ—Ç—Å—è —É –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏–∏, —Ö–æ—Ç—è —Ç—É—Ç —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ.
// –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã, –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–∏–µ guard –≤–º–µ—Å—Ç–æ if


//2. –•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫


func settingInstall(){
    var settingsDictionary : [String:String] = ["–ê–≤–∏–∞—Ä–µ–∂–∏–º":"Off", "Wi-Fi":"On", "Bluetooth":"Off", "VPN":"On", "Notifications":"Off", "Sounds":"Off"]
    
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ‚öôÔ∏è ")
    print("–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ \"Exit\"")
    
    func checkSettings (_ setting: String) -> String? { // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏—è
        return settingsDictionary[setting]
    }
    
    
    let closeFunction : Bool = true // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    while closeFunction {
        print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å : ")
        let userInputOptional = readLine() //–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if let userInput = userInputOptional { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å–≤–∏–µ nill
            if userInput == "Exit"{ break }
            else if let haveOrNote = checkSettings(userInput){ // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ
                if haveOrNote == "Off"{
                    print("–£ –≤–∞—Å –≤—ã–∫–ª—é—á–µ–Ω–∞ –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
                    print("–í–≤–µ–¥–∏—Ç–µ \"–î–∞\", –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–µ –≤–∫–ª—é—á–∏—Ç—å")
                    let inputYes = readLine()
                    if let inputYes = inputYes {
                        if inputYes == "–î–∞"{
                            settingsDictionary[userInput] = "On"
                        }
                    }
                } else if haveOrNote == "On"{
                    print("–£ –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ –¥–∞–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
                    print("–í–≤–µ–¥–∏—Ç–µ \"–î–∞\", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –µ–µ –≤—ã–∫–ª—é—á–∏—Ç—å")
                    let inputYes = readLine()
                    if let inputYes = inputYes{
                        if inputYes == "–î–∞"{
                            settingsDictionary[userInput] = "Off"
                        }
                    }
                }
            } else { print("–¢–∞–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ—Ç!") }
        }
    }
}


//3. –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å










//
//  main.swift
//  hardBanking
//
//  Created by apple on 30.09.2023.
//

import Foundation



//1. –ö–∞–ª–µ–Ω–¥–∞—Ä—å. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª :
//   –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã, —Å–æ–±—ã—Ç–∏—è –∏ —Ç–¥. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π

var dates = [String:[String]]() // –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å(dictionary), –≥–¥–µ –∫–ª—é—á —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
func searchFromDate(date string: String) -> [String]? { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–∞—Ä—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É
    return dates[string]
}

func calendare() -> Bool? {
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ü´∂üèΩ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å üóìÔ∏è")
    let exit : Bool = true
    print("–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ \"Exit\" –≤–º–µ—Å—Ç–æ –¥–∞—Ç—ã")

    while exit {
        print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ : ")
        let userMainInputOptinal = readLine()
        guard let userMainInput = userMainInputOptinal else { return nil }
        if userMainInput == "Exit" { break }
        if let haveOrNot = searchFromDate(date:userMainInput) { // –ï—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
            print("–í –¥–∞—Ç—É 15.04, –ø—Ä–æ–∏–∑–æ—à–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è : \(haveOrNot)")
        } else { // –ï—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            print("–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –¥–∞–Ω–Ω—É—é –¥–∞—Ç—É")
            print("–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ ?")
            let userChoice = readLine()
            if let userChoice = userChoice { // –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if userChoice == "–î–∞" || userChoice == "–¥–∞" || userChoice == "Yes" { // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
                    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É (–ú–µ—Å—è—Ü.–î–µ–Ω—å) —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º")
                    let newDateOptinal = readLine() // –í–≤–æ–¥ –¥–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                    if let newDate = newDateOptinal { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω—É–ª–µ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                        print("–í–≤–µ–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ : ")
                        let newEventOptinal = readLine() // –í–≤–æ–¥ —Å–æ–±—ã—Ç–∏—è –≤ —ç—Ç—É –¥–∞—Ç—É
                        if let newEvent = newEventOptinal {
                            var newEmptyElements = [String]()
                            let separatedEvent = newEvent.split(separator: " ")
                            for element in separatedEvent{
                                newEmptyElements.append(String(element))
                            }
                            dates[newDate] = newEmptyElements // –î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä—å –∫–ª—é—á–∞(–¥–∞—Ç—ã) –∏ –∑–Ω–∞—á–µ–Ω–∏–µ(–º–∞—Å—Å–∏–≤ —Å–æ–±—ã—Ç–∏–π)

                        } else { print("Error Event")}
                    } else { print("Error Date") }
                } else if userChoice == "–ù–µ—Ç" || userChoice == "–Ω–µ—Ç" || userChoice == "Not"{ // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
                    print("–°–æ–±—ã—Ç–∏–µ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                }
            }
        }
    }
    return nil
}

// –ü–æ—á–µ–º—É –≤–æ–∑–≤—Ä–∞—à–µ—Ç—Å—è —É –Ω–∞—Å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏–∏, —Ö–æ—Ç—è —Ç—É—Ç —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ.
// –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã, –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–∏–µ guard –≤–º–µ—Å—Ç–æ if


//2. –•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫


func settingInstall(){
    var settingsDictionary : [String:String] = ["–ê–≤–∏–∞—Ä–µ–∂–∏–º":"Off", "Wi-Fi":"On", "Bluetooth":"Off", "VPN":"On", "Notifications":"Off", "Sounds":"Off"]
    
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ‚öôÔ∏è ")
    print("–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ \"Exit\"")
    
    func checkSettings (_ setting: String) -> String? { // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏—è
        return settingsDictionary[setting]
    }
    
    
    let closeFunction : Bool = true // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    while closeFunction {
        print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å : ")
        let userInputOptional = readLine() //–í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if let userInput = userInputOptional { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å–≤–∏–µ nill
            if userInput == "Exit"{ break }
            else if let haveOrNote = checkSettings(userInput){ // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ
                if haveOrNote == "Off"{
                    print("–£ –≤–∞—Å –≤—ã–∫–ª—é—á–µ–Ω–∞ –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
                    print("–í–≤–µ–¥–∏—Ç–µ \"–î–∞\", –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–µ –≤–∫–ª—é—á–∏—Ç—å")
                    let inputYes = readLine()
                    if let inputYes = inputYes {
                        if inputYes == "–î–∞"{
                            settingsDictionary[userInput] = "On"
                        }
                    }
                } else if haveOrNote == "On"{
                    print("–£ –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ –¥–∞–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
                    print("–í–≤–µ–¥–∏—Ç–µ \"–î–∞\", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –µ–µ –≤—ã–∫–ª—é—á–∏—Ç—å")
                    let inputYes = readLine()
                    if let inputYes = inputYes{
                        if inputYes == "–î–∞"{
                            settingsDictionary[userInput] = "Off"
                        }
                    }
                }
            } else { print("–¢–∞–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ—Ç!") }
        }
    }
}


//3. –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å

func translateEngRus(){
    let engRusDictionary : [String:String] =
    [
    "hello":"–ø—Ä–∏–≤–µ—Ç","how":"–∫–∞–∫","where":"–≥–¥–µ","what":"—á—Ç–æ","friend":"–¥—Ä—É–≥","brother":"–±—Ä–∞—Ç","family":"—Å–µ–º—å—è","home":"–¥–æ–º","cat":"–∫–æ—Ç","dog":"—Å–æ–±–∞–∫–∞","cow":"–∫–æ—Ä–æ–≤–∞","iphone":"–∞–π—Ñ–æ–Ω","live":"–∂–∏–∑–Ω—å","like":"–Ω—Ä–∞–≤–∏—Ç—Å—è","about":"–æ","in":"–≤","mother":"–º–∞–º–∞","father":"–ø–∞–ø–∞","ball":"–º—è—á","rain":"–¥–æ–∂–¥—å","today":"—Å–µ–≥–æ–¥–Ω—è","tomorrow":"–∑–∞–≤—Ç—Ä–∞","yesterday":"–≤—á–µ—Ä–∞","among":"—Å—Ä–µ–¥–∏","us":"–Ω–∞—Å","we":"–º—ã","he":"–æ–Ω","she":"–æ–Ω–∞","lion":"–ª–µ–≤","tiger":"—Ç–∏–≥—Ä","eagle":"–æ—Ä–µ–ª","box":"–∫–æ—Ä–æ–±–∫–∞","mirror":"–∑–µ—Ä–∫–∞–ª–æ","link":"—Å–≤—è–∑—å","camel":"–≤–µ—Ä–±–ª—é–¥","swift":"–±—ã—Å—Ç—Ä–æ","lonely":"–æ–¥–∏–Ω–æ–∫–∏–π","do":"–¥–µ–ª–∞—Ç—å","will":"–±—É–¥–µ—à—å","did":"—Å–¥–µ–ª–∞–ª","write":"–ø–∏—Å–∞—Ç—å","kod":"–∫–æ–¥","some":"–Ω–µ–∫–æ—Ç–æ—Ä—ã–π","think":"–¥—É–º–∞—Ç—å","thing":"–≤–µ—â—å","use":"–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å","worm":"—á–µ—Ä–≤—å","tomato":"–ø–æ–º–∏–¥–æ—Ä","cucumber":"–æ–≥—É—Ä–µ—Ü","strawberry":"–∫–ª—É–±–Ω–∏–∫–∞","cherry":"–≤–∏—à–Ω—è","banana":"–±–∞–Ω–∞–Ω","peper":"–ø–µ—Ä–µ—Ü","salt":"—Å–æ–ª—å","sugar":"—Å–∞—Ö–∞—Ä","honey":"–º–µ–¥","short":"–∫–æ—Ä–æ—Ç–∫–∏–π","bear":"–º–µ–¥–≤–µ–¥—å","Dagestan":"–î–∞–≥–µ—Å—Ç–∞–Ω","have":"–∏–º–µ—Ç—å","wear":"–Ω–æ—Å–∏—Ç—å","cloth":"–æ–¥–µ–∂–¥–∞","jaket":"–∫—É—Ä—Ç–∫–∞","gym":"—Å–ø–æ—Ä—Ç–∑–∞–ª","judo":"–¥–∑—é–¥–æ","black":"—á–µ—Ä–Ω—ã–π","white":"–±–µ–ª—ã–π","blue":"—Å–∏–Ω–∏–π","yellow":"–∂–µ–ª—Ç—ã–π","green":"–∑–µ–ª–µ–Ω—ã–π","gray":"—Å–µ—Ä—ã–π","cold":"—Ö–æ–ª–æ–¥–Ω–æ","hot":"–∂–∞—Ä–∫–æ","water":"–≤–æ–¥–∞","fire":"–æ–≥–æ–Ω—å","litre":"–ª–∏—Ç—Ä","more":"–±–æ–ª–µ–µ","happy":"—Å—á–∞—Å—Ç–ª–∏–≤—ã–π","happens":"—Å–ª—É—á–∞—Ç—å—Å—è","world":"–º–∏—Ä","word":"—Å–ª–æ–≤–æ","letter":"–±—É–∫–≤–∞","viper":"–≥–∞–¥—é–∫–∞","poison":"—è–¥","park":"–ø–∞—Ä–∫","ocean":"–æ–∫–µ–∞–Ω","sea":"–º–æ—Ä–µ","earth":"–∑–µ–º–ª—è","up":"–≤–≤–µ—Ä—Ö","down":"–≤–Ω–∏–∑","all":"–≤—Å–µ","every":"–∫–∞–∂–¥—ã–π","lone":"–æ–¥–∏–Ω–æ–∫–∏–π","large":"–±–æ–ª—å—à–æ–π","little":"–º–∞–ª–µ–Ω—å–∫–∏–π","around":"–≤–æ–∫—Ä—É–≥","every where":"–≤–µ–∑–¥–µ","yes":"–¥–∞","not":"–Ω–µ—Ç","note":"–∑–∞–ø–∏—Å–∫–∞","book":"–∫–Ω–∏–≥–∞","read":"—á–∏—Ç–∞—Ç—å","weather":"–ø–æ–≥–æ–¥–∞","sun":"—Å–æ–ª–Ω—Ü–µ","slow":"–º–µ–¥–ª–µ–Ω–Ω—ã–π","can":"–º–æ–∂–µ—Ç","maybe":"–º–æ–∂–µ—Ç –±—ã—Ç—å","glass":"—Å—Ç–µ–∫–ª–æ","wind":"–≤–µ—Ç–µ—Ä","air":"–≤–æ–∑–¥—É—Ö","element":"—ç–ª–µ–º–µ–Ω—Ç","branch":"–≤–µ—Ç–≤—å","hard":"—Ç—Ä—É–¥–Ω—ã–π","blood":"–∫—Ä–æ–≤—å","fild":"–ø–æ–ª–µ","memory":"–ø–∞–º—è—Ç—å","as":"–∫–∞–∫","mini":"–º–∏–Ω–∏–º—É–º","most":"–±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ","sort":"—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞","run":"–±–µ–∂–∞—Ç—å","role":"—Ä–æ–ª—å","point":"–æ—á–∫–æ","notebook":"–±–ª–æ–∫–Ω–æ—Ç","library":"–±–∏–±–ª–∏–æ—Ç–µ–∫–∞","river":"—Ä–µ–∫–∞","kotlin":"–∫–æ—Ç–ª–∏–Ω","bubble":"–ø—É–∑—ã—Ä—å","cofe":"–∫–æ—Ñ–µ","tea":"—á–∞–π","directory":"–∫–∞—Ç–∞–ª–æ–≥","dictionary":"—Å–ª–æ–≤–∞—Ä—å","set":"–Ω–∞–±–æ—Ä","complex":"—Å–ª–æ–∂–Ω—ã–π","milk":"–º–æ–ª–æ–∫–æ","motivation":"–º–æ—Ç–∏–≤–∞—Ü–∏—è"
    ]
    
    
    func searchWord (engWord : String) -> String? {
        return engRusDictionary[engWord]
    }
    
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–≥–ª–æ-–†—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å üìñ")
    print("–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ \"Exit\"")
    while true{
        print("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ : ")
        let getWord = readLine() ?? "0"
        if getWord == "Exit" { break }
        if let translateWord = searchWord(engWord: getWord){
            print("\(translateWord)")
        } else {
            print("–í —Å–ª–æ–≤–∞—Ä–µ –Ω–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞")
        }
    }
}


//4. –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∏—Å–∫ —Å—Ç—Ä–∞–Ω, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω—ã, –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ä–æ–¥–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º, —É–¥–∞–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å—Ç—Ä–∞–Ω—ã

func citiesInCountries(){
    let info: String =   """
                            –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä—Å–∫–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π, –∏ –Ω–µ —Ç–µ—Ä–ø–∏—Ç –ø–ª–∞–≥–∏–∞—Ç–∞üòÇ
                            –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω –∏ –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µü§ê
                            –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ –∞–Ω–≥–ª–∏—Å–π–∫–∏–π, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –≤–∏–Ω–æ–≤–∞—Ç(–≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞—Ä—åüìñ)ü§´
                            –î–æ–±–∞–≤–ª—è–π—Ç–µ –≥–æ—Ä–æ–¥–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µüè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø
                            –í —Å–ª—É—á–∞–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã —Å–∞–Ω–∫—Ü–∏–∏üí∏
                            –ù–µ –∑–∞–¥–∞–≤–∞–π—Ç–µ—Å—å –≤–æ–ø—Ä–æ—Å–æ–º –ø–æ—á–µ–º—É –∑–¥–µ—Å—å –≤—Å–µ–≥–æ 13 —Å—Ç—Ä–∞–Ωü§î
                            –£ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–¥–∞—á—É –¥–æ–º–∞—à–Ω–µ–π —Ä–∞–±–æ—Ç—ã‚è≥
                            """
    var citiesDictionary: [String:Set<String>] = [
        "Russian":["Moscow","Saint Pitersburg","Kazan","Mahachkala"],
        "Spain":["Madrid","Barselona","Valencia","Sevilia","Palma"],
        "Germany":["Berlin","Hamburg","Munchen","Koln","Stuttgart"],
        "Croatia":["Zagred","Split","Rijeka"],
        "China":["Beijing","Tianjin","Shanghai"],
        "Australia":["Canberra"],
        "Armenia":["Yerevan"],
        "Bahrain":["Manama"],
        "Belarus":["Minsk"],
        "Belgium":["Brussels"],
        "Brazil":["Brasillia"],
        "Canade":["Ottawa"],
        "Chile":["Santiago"]
    ]
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –≥–æ—Ä–æ–¥–æ–≤ üåá")
    
    
    
    while true {
        print("""
               
               1. –ü—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ä–æ–¥–æ–≤ —Å—Ç—Ä–∞–Ω—ã
               2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
               3. –£–¥–∞–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å—Ç—Ä–∞–Ω—ã
               4. –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
               5. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
               
               """)
        let userChoice = readLine() ?? "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞"
        if userChoice == "4" { break }
        else if userChoice == "1" {
            print("""
                    Choice country :
                    1. Russian
                    2. Spain
                    3. Germany
                    4. Croatian
                    5. China
                    6. Australia
                    7. Armenia
                    8. Bahrain
                    9. Belarus
                    10. Belgium
                    11. Brazil
                    12. Canade
                    13. Chile
                    """)
            let userChoiceCountry = readLine() ?? "0"
            switch userChoiceCountry{
            case "1":
                print(citiesDictionary["Russian"] ?? "Not have city")
            case "2":
                print(citiesDictionary["Spain"] ?? "Not have city")
            case "3":
                print(citiesDictionary["Germany"] ?? "Not have city")
            case "4":
                print(citiesDictionary["Croatian"] ?? "Not have city")
            case "5":
                print(citiesDictionary["China"] ?? "Not have city")
            case "6":
                print(citiesDictionary["Ausralia"] ?? "Not have city")
            case "7":
                print(citiesDictionary["Armenia"] ?? "Not have city")
            case "8":
                print(citiesDictionary["Bahrain"] ?? "Not have city")
            case "9":
                print(citiesDictionary["Belarus"] ?? "Not have city")
            case "10":
                print(citiesDictionary["Belgium"] ?? "Not have city")
            case "11":
                print(citiesDictionary["Brazil"] ?? "Not have city")
            case "12":
                print(citiesDictionary["Canade"] ?? "Not have city")
            case "13":
                print(citiesDictionary["Chile"] ?? "Not have city")
            default:
                print("Error choice")
            }
        } else if userChoice == "2" {
            print("""
                    Choice country :
                    1. Russian
                    2. Spain
                    3. Germany
                    4. Croatian
                    5. China
                    6. Australia
                    7. Armenia
                    8. Bahrain
                    9. Belarus
                    10. Belgium
                    11. Brazil
                    12. Canade
                    13. Chile
                    """)
            let userChoiceCountry = readLine() ?? "0"
            print("Please input name of citi")
            let userInputNewCiti = readLine() ?? "0"
            switch userChoiceCountry{
            case "1":
                citiesDictionary["Russian"]?.insert(userInputNewCiti)
            case "2":
                citiesDictionary["Spain"]?.insert(userInputNewCiti)
            case "3":
                citiesDictionary["Germany"]?.insert(userInputNewCiti)
            case "4":
                citiesDictionary["Croatian"]?.insert(userInputNewCiti)
            case "5":
                citiesDictionary["China"]?.insert(userInputNewCiti)
            case "6":
                citiesDictionary["Australia"]?.insert(userInputNewCiti)
            case "7":
                citiesDictionary["Armenia"]?.insert(userInputNewCiti)
            case "8":
                citiesDictionary["Bahrain"]?.insert(userInputNewCiti)
            case "9":
                citiesDictionary["Belarus"]?.insert(userInputNewCiti)
            case "10":
                citiesDictionary["Belgium"]?.insert(userInputNewCiti)
            case "11":
                citiesDictionary["Brazil"]?.insert(userInputNewCiti)
            case "12":
                citiesDictionary["Canade"]?.insert(userInputNewCiti)
            case "13":
                citiesDictionary["Chile"]?.insert(userInputNewCiti)
            default:
                print("Error choice")
            }
        } else if userChoice == "3"{
            print("""
                    Choice country :
                    1. Russian
                    2. Spain
                    3. Germany
                    4. Croatian
                    5. China
                    6. Australia
                    7. Armenia
                    8. Bahrain
                    9. Belarus
                    10. Belgium
                    11. Brazil
                    12. Canade
                    13. Chile
                    """)
            let userChoiceCountry = readLine() ?? "0"
            switch userChoiceCountry{
            case "1":
                print(citiesDictionary["Russian"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Russian"]?.remove(userDeleteCity)
            case "2":
                print(citiesDictionary["Spain"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Spain"]?.remove(userDeleteCity)
            case "3":
                print(citiesDictionary["Germany"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Germany"]?.remove(userDeleteCity)
            case "4":
                print(citiesDictionary["Croatian"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Croatian"]?.remove(userDeleteCity)
            case "5":
                print(citiesDictionary["China"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["China"]?.remove(userDeleteCity)
            case "6":
                print(citiesDictionary["Ausralia"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Australia"]?.remove(userDeleteCity)
            case "7":
                print(citiesDictionary["Armenia"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Armenia"]?.remove(userDeleteCity)
            case "8":
                print(citiesDictionary["Bahrain"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Bahrain"]?.remove(userDeleteCity)
            case "9":
                print(citiesDictionary["Belarus"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Belarus"]?.remove(userDeleteCity)
            case "10":
                print(citiesDictionary["Belgium"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Belgium"]?.remove(userDeleteCity)
            case "11":
                print(citiesDictionary["Brazil"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Brazil"]?.remove(userDeleteCity)
            case "12":
                print(citiesDictionary["Canade"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Canade"]?.remove(userDeleteCity)
            case "13":
                print(citiesDictionary["Chile"] ?? "Not have city")
                print("Which you want delete?")
                let userDeleteCity = readLine() ?? "Error Delete"
                citiesDictionary["Chile"]?.remove(userDeleteCity)
            default:
                print("Error choice")
            }
        } else if userChoice == "5"{
            print("\(info)")
        }
    }
}   






